# Generated by assistant: multi-org + audit + optimizations
from django.db import migrations, models
import django.db.models.deletion


def set_default_org_is_general(apps, schema_editor):
    Organizacion = apps.get_model('core', 'Organizacion')
    # Ensure column exists: migration adds field; data fill default False
    for org in Organizacion.objects.all():
        if getattr(org, 'is_general', None) is None:
            org.is_general = False
            org.save(update_fields=['is_general'])


def set_proyecto_org_from_cliente(apps, schema_editor):
    Proyecto = apps.get_model('core', 'Proyecto')
    for p in Proyecto.objects.all():
        if getattr(p, 'organizacion_id', None) is None:
            try:
                cliente = p.cliente
                if cliente and getattr(cliente, 'organizacion_id', None):
                    p.organizacion_id = cliente.organizacion_id
                    p.save(update_fields=['organizacion_id'])
            except Exception:
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_proyecto_public_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='organizacion',
            name='is_general',
            field=models.BooleanField(default=False, verbose_name='Organización General (Soporte)'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_creados', to='auth.user', verbose_name='Creado por'),
        ),
        migrations.AddField(
            model_name='proyecto',
            name='organizacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.organizacion', verbose_name='Organización'),
        ),
        migrations.AddIndex(
            model_name='proyecto',
            index=models.Index(fields=['organizacion', 'fecha_creacion'], name='proy_org_fecha_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['organizacion', 'fecha_creacion'], name='cli_org_fecha_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['created_by', 'fecha_creacion'], name='cli_creador_fecha_idx'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(choices=[('LOGIN', 'LOGIN'), ('CREATE', 'CREATE'), ('UPDATE', 'UPDATE'), ('DELETE', 'DELETE'), ('RUN_OPT', 'RUN_OPT'), ('MOVE', 'MOVE'), ('EDIT', 'EDIT')], max_length=20, verbose_name='Acción')),
                ('target_model', models.CharField(max_length=120, verbose_name='Modelo')),
                ('target_id', models.CharField(max_length=64, verbose_name='ID Objetivo')),
                ('target_repr', models.TextField(blank=True, null=True, verbose_name='Representación')),
                ('changes', models.JSONField(blank=True, null=True, verbose_name='Cambios/Metadatos')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user', verbose_name='Actor')),
                ('organizacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.organizacion', verbose_name='Organización')),
            ],
            options={'verbose_name': 'Auditoría', 'verbose_name_plural': 'Auditorías', 'ordering': ['-created_at']},
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['organizacion', 'created_at'], name='audit_org_fecha_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['actor', 'created_at'], name='audit_actor_fecha_idx'),
        ),
        migrations.CreateModel(
            name='OptimizationRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_at', models.DateTimeField(verbose_name='Ejecutado en')),
                ('porcentaje_uso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='% uso tablero')),
                ('tiempo_ms', models.IntegerField(blank=True, null=True, verbose_name='Tiempo (ms)')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organizacion', verbose_name='Organización')),
                ('proyecto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.proyecto', verbose_name='Proyecto')),
                ('run_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user', verbose_name='Ejecutado por')),
            ],
            options={'verbose_name': 'Ejecución de Optimización', 'verbose_name_plural': 'Ejecuciones de Optimización', 'ordering': ['-run_at']},
        ),
        migrations.AddIndex(
            model_name='optimizationrun',
            index=models.Index(fields=['organizacion', 'run_at'], name='opt_org_fecha_idx'),
        ),
        migrations.AddIndex(
            model_name='optimizationrun',
            index=models.Index(fields=['proyecto', 'run_at'], name='opt_proy_fecha_idx'),
        ),
        migrations.RunPython(set_default_org_is_general, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(set_proyecto_org_from_cliente, reverse_code=migrations.RunPython.noop),
    ]
